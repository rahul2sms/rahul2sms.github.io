{"version":3,"file":"component---src-pages-index-jsx-554950008c2fdd6e0c00.js","mappings":"gOACiE,IAE5CA,EAAY,SAAAC,GAAA,SAAAD,IAAA,QAAAE,EAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAqC5B,OArC4BN,EAAAD,EAAAQ,KAAAC,MAAAT,EAAA,OAAAU,OAAAL,KAAA,MAE7BM,MAAQ,CACJC,UAAW,KACXC,OAAQ,GACRC,cAAe,KACfC,KAAM,IACTd,EAODe,SAAWC,UACJ,oBAAqBC,OACpBjB,EAAKkB,SAAS,CAAEP,WAAW,EAAMC,OAAQO,gBAAgBC,cAGzDpB,EAAKkB,SAAS,CAAEP,WAAW,GAC/B,EACHX,EAEDqB,oBAAsBC,IAClB,MAAMC,EAAQD,EAAEE,cAAcC,MAC9BzB,EAAKkB,SAAS,CAAEL,cAAeb,EAAKU,MAAME,OAAQW,IAAS,EAC9DvB,EAED0B,SAAWJ,IACPA,EAAEK,iBAEF,MAAMC,EAAM,IAAIC,yBAEhBD,EAAId,KAAOd,EAAKU,MAAMI,KACtBc,EAAIE,MAAQ9B,EAAKU,MAAMG,cAEvBI,OAAOE,gBAAgBY,MAAMH,EAAI,EACpC5B,CAAA,EArC4BgC,EAAAA,EAAAA,GAAAlC,EAAAC,GAqC5B,IAAAkC,EAAAnC,EAAAoC,UA0BA,OA1BAD,EA5BDE,kBAAA,WACGC,KAAKrB,WACLE,OAAOE,gBAAgBkB,gBAAkBD,KAAKrB,QACjD,EAACkB,EA2BDK,OAAA,WACI,OAAOC,EAAAA,cAACC,EAAAA,EAAc,KAClBD,EAAAA,cAAA,WAASE,UAAU,sBACfF,EAAAA,cAAA,MAAIE,UAAU,uBAAsB,6BACV,IAAzBL,KAAK1B,MAAMC,WAAuB4B,EAAAA,cAAA,QAAME,UAAU,sBAAqB,gBAAaF,EAAAA,cAAA,cAAQ,oBAAyB,sBAEtHA,EAAAA,cAAA,QAAME,UAAU,oBAAoBf,SAAUU,KAAKV,UAC/Ca,EAAAA,cAAA,OAAKE,UAAU,QACXF,EAAAA,cAAA,SAAOG,QAAQ,WAAWD,UAAU,cAAa,gBACjDF,EAAAA,cAAA,UAAQI,GAAG,WAAWF,UAAU,cAAcG,SAAUR,KAAKf,oBAAqBwB,UAAU,GACxFN,EAAAA,cAAA,UAAQd,MAAO,KACdW,KAAK1B,MAAME,OAAOkC,KAAI,CAAChB,EAAOP,IAAUgB,EAAAA,cAAA,UAAQQ,IAAM,eAAcjB,EAAMkB,OAAQvB,MAAQ,GAAEF,KAAUO,EAAMkB,UAIrHT,EAAAA,cAAA,OAAKE,UAAU,QACXF,EAAAA,cAAA,SAAOG,QAAQ,cAAa,yBAC5BH,EAAAA,cAAA,YAAUI,GAAG,aAAaF,UAAU,eAAeI,UAAU,EAAMD,SAAUtB,GAAKc,KAAKlB,SAAS,CAAEJ,KAAMQ,EAAEE,cAAcC,WAG5Hc,EAAAA,cAAA,UAAQU,KAAK,SAASR,UAAU,6BAA4B,WAI5E,EAAC3C,CAAA,CA/D4B,CAASyC,EAAAA,U,2FCA3B,SAASW,IAEtB,OAAOX,EAAAA,cAACzC,EAAAA,QAAY,KACtB,C","sources":["webpack://gatsby-starter-hello-world/./src/pages/TextToSpeech.jsx","webpack://gatsby-starter-hello-world/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\"\nimport LayoutPreLogin from \"../components/layouts/LayoutPreLogin\"\n\nexport default class TextToSpeech extends React.Component {\n\n    state = {\n        supported: null,\n        voices: [],\n        selectedVoice: null,\n        text: ''\n    }\n\n    componentDidMount() {\n       this.initData();\n       window.speechSynthesis.onvoiceschanged = this.initData;\n    }\n\n    initData = async () => {\n        if('speechSynthesis' in window) {\n            this.setState({ supported: true, voices: speechSynthesis.getVoices() });\n        }\n        else {\n            this.setState({ supported: false });\n        }\n    }\n\n    onChangeVoiceOption = e => {\n        const index = e.currentTarget.value;\n        this.setState({ selectedVoice: this.state.voices[ index ]});\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const msg = new SpeechSynthesisUtterance();\n\n        msg.text = this.state.text;\n        msg.voice = this.state.selectedVoice;\n\n        window.speechSynthesis.speak(msg);\n    }\n\n    render() {\n        return <LayoutPreLogin> \n            <section className=\"d-flex flex-column\">\n                <h1 className=\"h2 text-center my-4\">I can read what you type</h1>\n                {this.state.supported === false && <span className=\"alert alert-danger\">Your browser <strong>does not support</strong> Speech Synthesis.</span>}\n\n                <form className=\"align-self-center\" onSubmit={this.onSubmit}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"lstVoice\" className=\"form-label\">Select Voice</label>\n                        <select id=\"lstVoice\" className=\"form-select\" onChange={this.onChangeVoiceOption} required={true}>\n                            <option value={''}></option>\n                            {this.state.voices.map((voice, index) => <option key={`voiceOption-${voice.name}`} value={`${index}`}>{voice.name}</option>)}\n                        </select>\n                    </div>\n                    \n                    <div className=\"mb-3\">\n                        <label htmlFor=\"txtMessage\">Your message to read:</label>\n                        <textarea id=\"txtMessage\" className=\"form-control\" required={true} onChange={e => this.setState({ text: e.currentTarget.value })}></textarea>\n                    </div>\n                    \n                    <button type=\"submit\" className=\"btn btn-primary float-end\">Speak</button>\n                </form>\n            </section>\n        </LayoutPreLogin>\n    }\n}","import * as React from \"react\";\nimport TextToSpeech from \"./TextToSpeech\";\n\nexport default function Home() {\n\n  return <TextToSpeech></TextToSpeech>\n}\n"],"names":["TextToSpeech","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","supported","voices","selectedVoice","text","initData","async","window","setState","speechSynthesis","getVoices","onChangeVoiceOption","e","index","currentTarget","value","onSubmit","preventDefault","msg","SpeechSynthesisUtterance","voice","speak","_inheritsLoose","_proto","prototype","componentDidMount","this","onvoiceschanged","render","React","LayoutPreLogin","className","htmlFor","id","onChange","required","map","key","name","type","Home"],"sourceRoot":""}