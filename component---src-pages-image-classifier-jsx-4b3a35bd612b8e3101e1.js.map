{"version":3,"file":"component---src-pages-image-classifier-jsx-4b3a35bd612b8e3101e1.js","mappings":"wPAI4D,IAEvCA,EAAe,SAAAC,GAEhC,SAAAD,EAAYE,GAAQ,IAADC,EAUG,OATlBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MAgBhBG,KAAOC,UAEHH,EAAKI,SAAS,CAAEC,SAAS,IACzB,MAAMC,EAAeC,SAASC,eAAe,gBAC7C,UACUC,EAAAA,MACNT,EAAKU,aAAeD,EAAAA,IAAAA,OAAeH,GACnCN,EAAKW,YAAcC,EAAAA,IAEnBZ,EAAKI,SAAS,CAAEC,SAAS,GAC7B,CACA,MAAMQ,GACFb,EAAKI,SAAS,CAAEU,aAAcD,EAAGE,SAAWF,EAAIR,SAAS,GAC7D,GACHL,EAEDgB,YAAcb,UAEVH,EAAKI,SAAS,CAAEC,SAAS,IACzB,IACI,MAAMY,QAAcjB,EAAKU,OAAOQ,UAC1BC,QAAoBnB,EAAKW,MAAMS,SAASH,GAC9CA,EAAMI,UAENrB,EAAKI,SAAS,CAAEe,cAAad,SAAS,GAC1C,CACA,MAAMQ,GACFb,EAAKI,SAAS,CAAEU,aAAcD,EAAGE,SAAWF,EAAIR,SAAS,GAC7D,GA1CAL,EAAKsB,MAAQ,CACTjB,SAAS,EACTS,aAAc,KACdK,YAAa,MAGjBnB,EAAKU,OAAS,KACdV,EAAKW,MAAQ,KAAKX,CACtB,EAbgCuB,EAAAA,EAAAA,GAAA1B,EAAAC,GAa/B,IAAA0B,EAAA3B,EAAA4B,UA+CA,OA/CAD,EAEDE,kBAAA,WACGC,KAAKzB,MACR,EAACsB,EAiCDI,OAAA,WACI,OAAOC,EAAAA,cAACC,EAAAA,EAAc,CAACC,UAAU,8CAC7BF,EAAAA,cAAA,MAAIE,UAAU,MAAK,WAClBJ,KAAKL,MAAMR,cAAgBe,EAAAA,cAAA,QAAME,UAAU,4BAA4BJ,KAAKL,MAAMR,cACnFe,EAAAA,cAAA,SAAOG,GAAG,eAAeD,UAAU,gBAClCJ,KAAKL,MAAMjB,SAAWwB,EAAAA,cAAA,iBACvBA,EAAAA,cAAA,UAAQE,UAAU,kBAAkBE,SAAUN,KAAKL,MAAMjB,QAAS6B,OAAQP,KAAKL,MAAMjB,QAAS8B,QAASR,KAAKX,aAAa,QAEzHa,EAAAA,cAACO,EAAAA,EAAe,CAACjB,YAAaQ,KAAKL,MAAMH,cAEjD,EAACtB,CAAA,CA5D+B,CAASgC,EAAAA,U","sources":["webpack://gatsby-starter-hello-world/./src/pages/ImageClassifier.jsx"],"sourcesContent":["import React from \"react\";\nimport LayoutPreLogin from \"../components/layouts/LayoutPreLogin\";\nimport * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\nimport PredictionTable from \"../components/PredictionTable\";\n\nexport default class ImageClassifier extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            alertMessage: null,\n            predictions: null\n        }\n\n        this.webcam = null;\n        this.model = null;\n    }\n\n    componentDidMount() {\n       this.init();\n    }\n\n    init = async () => {\n        \n        this.setState({ loading: true });\n        const videoElement = document.getElementById('videoElement');\n        try {\n            await tf.ready();\n            this.webcam = await tf.data.webcam(videoElement);\n            this.model = await mobilenet.load();\n\n            this.setState({ loading: false });\n        }\n        catch(ex) {\n            this.setState({ alertMessage: ex.message || ex, loading: false });\n        }\n    }\n\n    onClickSnap = async e => {\n\n        this.setState({ loading: true });\n        try {\n            const image = await this.webcam.capture();\n            const predictions = await this.model.classify(image);\n            image.dispose();\n\n            this.setState({ predictions, loading: false });\n        }\n        catch(ex) {\n            this.setState({ alertMessage: ex.message || ex, loading: false });\n        }\n    }\n\n    render() {\n        return <LayoutPreLogin className='d-flex flex-column align-items-center my-4'>\n            <h1 className=\"h2\">Snap It</h1>\n            {this.state.alertMessage && <span className=\"alert alert-danger w-100\">{this.state.alertMessage}</span>}\n            <video id=\"videoElement\" className=\"border my-4\"></video>\n            {this.state.loading && <progress />}\n            <button className=\"btn btn-primary\" disabled={this.state.loading} hidden={this.state.loading} onClick={this.onClickSnap}>Snap</button>\n\n            <PredictionTable predictions={this.state.predictions} />\n        </LayoutPreLogin>\n    }\n}"],"names":["ImageClassifier","_React$Component","props","_this","call","init","async","setState","loading","videoElement","document","getElementById","tf","webcam","model","mobilenet","ex","alertMessage","message","onClickSnap","image","capture","predictions","classify","dispose","state","_inheritsLoose","_proto","prototype","componentDidMount","this","render","React","LayoutPreLogin","className","id","disabled","hidden","onClick","PredictionTable"],"sourceRoot":""}